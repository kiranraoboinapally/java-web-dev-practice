
git config --global -e 
to edit username and email information in it.

for insert we press i in it
for exit press esc+shift+:wq then enter(wq means write and quit)

git config --global user.name "github_username"


pwd

ls

git status

git add .

git status

git commit -m "new" 
#m means message
git status

git remote add origin  url


git push -u origin main (or) git push origin master


find . -type f -name "*.class" -exec git rm {} \;
#used to delete certain files ends with .class extension to delete all


echo "*.class" >> .gitignore
git rm --cached "*.class"
#to avoid or ignoring .class in future commits 

#for cloning others tree branch or which is not a default main branch
git clone -b other-branch-name https://github.com/username/repo.git



git ls-files

git rm -rf folder1

git rm .

git rm --cached file2.txt

git restore --staged .


git branch 
//to check branches
*master
main

git branch branchname(main)


git checkout main


git checkout -b main1


git merge main1 main
//merging from main1 to main.



npx create-react-app myapp
npm start

npm install -g json-server
to run it 
json-server --watch data.json -p 3030


npm -i axios


In MySQL WorkBench to change port number>>>from 3306 to 3030
Open Notepad as Run administartaor and open below file and change port number from 3306 to 3030
C:\ProgramData\MySQL\MySQL Server 8.0\my.ini



usd currency converter api
https://open.er-api.com/v6/latest/USD


---

### **How to Ignore Untracked Files in Git**

1. **Add to `.gitignore`**:

   * Ensure the files or directories you want to ignore are listed in `.gitignore`. Example:

     ```bash
     /.metadata/
     back/tasksTODO.md
     back/README.md
     ```

2. **Untracked Files**:

   * Files marked in **red** by `git status` are **untracked** (not staged or committed yet).
   * These files are **ignored from future commits** once added to `.gitignore`.

3. **Clean Up Untracked Files**:

   * To remove untracked files that are ignored (and not tracked by Git), use:

     ```bash
     git clean -fdX
     ```
   * `-f` forces the operation, `-d` removes untracked directories, `-X` cleans only ignored files.

4. **Check Status**:

   * After cleaning up, run `git status` to ensure those files are no longer showing in red (untracked).

5. **Notes**:

   * Files in `.gitignore` won't be added to version control if untracked.
   * Once added, Git ignores them permanently unless `.gitignore` is modified.

---